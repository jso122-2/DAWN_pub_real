/* DAWN Design System - Living Consciousness Containers
 * Integrated glass effects and design tokens
 * Multi-layered effects create depth and life
 */

/* === CUSTOM PROPERTIES === */

/* Animated properties for smooth transitions */
@property --aurora-angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@property --refraction-offset {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: false;
}

@property --energy-intensity {
  syntax: '<number>';
  initial-value: 0.5;
  inherits: false;
}

@property --gradient-angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@property --glow-intensity {
  syntax: '<number>';
  initial-value: 0.5;
  inherits: false;
}

@property --particle-rotation {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@property --energy-level {
  syntax: '<percentage>';
  initial-value: 50%;
  inherits: false;
}

/* === ROOT VARIABLES === */

:root {
  /* === COSMIC COLOR SYSTEM === */
  
  /* Neural Purple - Consciousness and thought */
  --neural-50: #faf5ff;
  --neural-100: #f3e8ff;
  --neural-200: #e9d5ff;
  --neural-300: #d8b4fe;
  --neural-400: #c084fc;
  --neural-500: #a855f7;
  --neural-600: #9333ea;
  --neural-700: #7c3aed;
  --neural-800: #6b21a8;
  --neural-900: #581c87;
  --neural-rgb: 168, 85, 247;
  
  /* Consciousness Cyan - Energy and computation */
  --consciousness-50: #ecfeff;
  --consciousness-100: #cffafe;
  --consciousness-200: #a5f3fc;
  --consciousness-300: #67e8f9;
  --consciousness-400: #22d3ee;
  --consciousness-500: #06b6d4;
  --consciousness-600: #0891b2;
  --consciousness-700: #0e7490;
  --consciousness-800: #155e75;
  --consciousness-900: #164e63;
  --consciousness-rgb: 6, 182, 212;
  
  /* Chaos Pink - Entropy and transformation */
  --chaos-50: #fef2f8;
  --chaos-100: #fce7f3;
  --chaos-200: #fbcfe8;
  --chaos-300: #f9a8d4;
  --chaos-400: #f472b6;
  --chaos-500: #ec4899;
  --chaos-600: #db2777;
  --chaos-700: #be185d;
  --chaos-800: #9d174d;
  --chaos-900: #831843;
  --chaos-rgb: 236, 72, 153;
  
  /* Process Green - Flow and systems */
  --process-50: #f0fdf4;
  --process-100: #dcfce7;
  --process-200: #bbf7d0;
  --process-300: #86efac;
  --process-400: #4ade80;
  --process-500: #22c55e;
  --process-600: #16a34a;
  --process-700: #15803d;
  --process-800: #166534;
  --process-900: #14532d;
  --process-rgb: 34, 197, 94;

  /* === ANIMATED GRADIENTS === */
  --gradient-consciousness: linear-gradient(
    135deg,
    var(--neural-500) 0%,
    var(--consciousness-500) 33%,
    var(--process-500) 66%,
    var(--neural-500) 100%
  );
  
  --gradient-consciousness: conic-gradient(
    from 0deg at 50% 50%,
    var(--consciousness-400),
    var(--neural-400),
    var(--chaos-400),
    var(--process-400),
    var(--consciousness-400)
  );
  
  --gradient-chaos: radial-gradient(
    circle at center,
    var(--chaos-500) 0%,
    var(--chaos-600) 50%,
    transparent 100%
  );

  /* === ANIMATION TIMINGS === */
  --breathe-idle: 6s;
  --breathe-active: 3s;
  --breathe-processing: 1.5s;
  --breathe-error: 0.5s;
  --breathe-dormant: 12s;
  
  --pulse-slow: 8s;
  --pulse-normal: 4s;
  --pulse-fast: 2s;
  --pulse-critical: 1s;

  /* === GLOW SYSTEM === */
  --glow-neural: 0.7;
  --glow-consciousness: 0.9;
  --glow-chaos: 1.0;
  --glow-process: 0.5;
  --glow-monitoring: 0.3;
  
  --glow-multiplier-idle: 0.5;
  --glow-multiplier-active: 1.0;
  --glow-multiplier-processing: 0.8;
  --glow-multiplier-error: 1.2;

  /* === PARTICLE SYSTEM === */
  --particle-count-sparse: 5;
  --particle-count-normal: 10;
  --particle-count-dense: 20;
  
  --particle-size-sm: 100px;
  --particle-size-md: 200px;
  --particle-size-lg: 300px;
  
  --particle-speed-slow: 40s;
  --particle-speed-normal: 30s;
  --particle-speed-fast: 20s;
  --particle-speed-chaos: 10s;
  
  --particle-opacity-min: 0.3;
  --particle-opacity-max: 0.9;

  /* === GLASS EFFECTS === */
  --blur-minimal: 8px;
  --blur-light: 12px;
  --blur-medium: 16px;
  --blur-heavy: 20px;
  --blur-max: 24px;
  
  --saturation-low: 1.2;
  --saturation-normal: 1.8;
  --saturation-high: 2.2;
  --saturation-max: 3.0;

  /* === ANIMATION EASINGS === */
  --ease-consciousness: cubic-bezier(0.23, 1, 0.32, 1);
  --ease-consciousness: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --ease-smooth: cubic-bezier(0.4, 0, 0.2, 1);
  --ease-sharp: cubic-bezier(0.4, 0, 0.6, 1);

  /* === ENERGY FIELD PROPERTIES === */
  --field-size-sm: 20px;
  --field-size-md: 40px;
  --field-size-lg: 60px;
  --field-size-xl: 80px;
  
  --field-neural: rgba(168, 85, 247, 0.4);
  --field-consciousness: rgba(6, 182, 212, 0.4);
  --field-chaos: rgba(236, 72, 153, 0.4);
  --field-process: rgba(34, 197, 94, 0.4);

  /* === RESPONSIVE SCALING === */
  --scale-mobile: 0.8;
  --scale-tablet: 0.9;
  --scale-desktop: 1.0;
  --scale-large: 1.1;

  /* === Z-INDEX LAYERS === */
  --z-base: 1;
  --z-module: 10;
  --z-active: 20;
  --z-overlay: 30;
  --z-modal: 40;
  --z-critical: 50;
}

/* === GLASS COMPONENTS === */

/* Particle system container */
.glass-panel::before,
.glass-base::before,
.glass::before,
.glass-neural::before,
.glass-consciousness::before,
.glass-chaos::before,
.glass-process::before,
.glass-critical::before,
.glass-heavy::before,
.glass-light::before,
.glass-diagnostic::before,
.glass-connection::before,
.glass-connection-glow::before {
  content: '';
  position: absolute;
  inset: 0;
  overflow: hidden;
  border-radius: inherit;
  pointer-events: none;
  
  /* Multiple particle layers */
  background-image:
    /* Large particles */
    radial-gradient(circle at 20% 80%, rgba(255, 255, 255, 0.8) 0%, transparent 1%),
    radial-gradient(circle at 80% 20%, rgba(var(--consciousness-rgb), 0.8) 0%, transparent 1%),
    radial-gradient(circle at 50% 50%, rgba(var(--neural-rgb), 0.8) 0%, transparent 1%),
    /* Medium particles */
    radial-gradient(circle at 70% 70%, rgba(255, 255, 255, 0.6) 0%, transparent 0.5%),
    radial-gradient(circle at 30% 30%, rgba(var(--process-rgb), 0.6) 0%, transparent 0.5%),
    /* Small particles */
    radial-gradient(circle at 90% 10%, rgba(255, 255, 255, 0.4) 0%, transparent 0.3%),
    radial-gradient(circle at 10% 90%, rgba(var(--chaos-rgb), 0.4) 0%, transparent 0.3%);
  
  background-size: 
    var(--particle-size-lg) var(--particle-size-lg),
    var(--particle-size-lg) var(--particle-size-lg),
    var(--particle-size-lg) var(--particle-size-lg),
    var(--particle-size-md) var(--particle-size-md),
    var(--particle-size-md) var(--particle-size-md),
    var(--particle-size-sm) var(--particle-size-sm),
    var(--particle-size-sm) var(--particle-size-sm);
  
  background-position:
    0% 0%,
    100% 100%,
    50% 50%,
    30% 70%,
    70% 30%,
    10% 10%,
    90% 90%;
  
  opacity: var(--particle-opacity, 0.6);
  animation: particle-drift var(--particle-speed-normal) linear infinite;
}

/* Holographic shimmer layer */
.glass-panel::after,
.glass-base::after,
.glass::after,
.glass-neural::after,
.glass-consciousness::after,
.glass-chaos::after,
.glass-process::after,
.glass-critical::after,
.glass-heavy::after,
.glass-light::after,
.glass-diagnostic::after,
.glass-connection::after,
.glass-connection-glow::after {
  content: '';
  position: absolute;
  inset: 0;
  opacity: 0;
  background: linear-gradient(
    105deg,
    transparent 40%,
    rgba(var(--neural-rgb), 0.3) 45%,
    rgba(var(--consciousness-rgb), 0.3) 50%,
    rgba(var(--process-rgb), 0.3) 55%,
    transparent 60%
  );
  transform: translateX(-100%);
  transition: opacity 0.6s var(--ease-smooth);
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* Hover state - Activate holographic shimmer */
.glass-panel:hover::after,
.glass-base:hover::after,
.glass:hover::after,
.glass-neural:hover::after,
.glass-consciousness:hover::after,
.glass-chaos:hover::after,
.glass-process:hover::after,
.glass-critical:hover::after,
.glass-heavy:hover::after,
.glass-light:hover::after,
.glass-diagnostic:hover::after,
.glass-connection:hover::after,
.glass-connection-glow:hover::after {
  opacity: 1;
  animation: holographic-shimmer 0.8s var(--ease-consciousness);
}

/* === MODULE VARIANTS === */

/* All glass variants inherit from glass-panel */
.glass-panel,
.glass-base,
.glass,
.glass-neural,
.glass-consciousness,
.glass-chaos,
.glass-process,
.glass-critical,
.glass-heavy,
.glass-light,
.glass-diagnostic,
.glass-connection,
.glass-connection-glow {
  position: relative;
  backdrop-filter: blur(var(--glass-blur, var(--blur-medium))) saturate(var(--glass-saturation, var(--saturation-normal)));
  -webkit-backdrop-filter: blur(var(--glass-blur, var(--blur-medium))) saturate(var(--glass-saturation, var(--saturation-normal)));
  background: 
    /* Top refraction layer */
    linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.01) 0%,
      rgba(255, 255, 255, 0.05) var(--refraction-offset),
      rgba(255, 255, 255, 0.01) 100%
    ),
    /* Middle energy layer */
    radial-gradient(
      ellipse at var(--refraction-offset) 50%,
      rgba(var(--module-color-rgb), 0.1) 0%,
      transparent 60%
    ),
    /* Base glass layer */
    linear-gradient(
      to bottom,
      rgba(255, 255, 255, 0.02) 0%,
      rgba(255, 255, 255, 0.01) 50%,
      rgba(0, 0, 0, 0.02) 100%
    );
  
  /* Aurora borealis border */
  border: 1px solid transparent;
  border-image: linear-gradient(
    var(--aurora-angle),
    var(--neural-400) 0%,
    var(--consciousness-400) 25%,
    var(--process-400) 50%,
    var(--chaos-400) 75%,
    var(--neural-400) 100%
  ) 1;
  
  /* Living shadow layers */
  box-shadow:
    /* Inner refraction */
    inset 0 1px 2px rgba(255, 255, 255, 0.1),
    inset 0 -1px 2px rgba(0, 0, 0, 0.1),
    /* Energy glow */
    0 0 calc(var(--field-size-md) * var(--energy-intensity)) rgba(var(--module-color-rgb), calc(0.4 * var(--energy-intensity))),
    /* Depth shadow */
    0 8px 32px rgba(0, 0, 0, 0.3),
    0 2px 8px rgba(0, 0, 0, 0.4);
  
  /* Smooth transitions */
  transition: all 0.6s var(--ease-consciousness);
  
  /* CSS variables for dynamic behavior */
  --glass-blur: var(--blur-medium);
  --glass-saturation: var(--saturation-normal);
  --module-color-rgb: var(--neural-rgb);
  
  /* Enable animations */
  animation: 
    aurora-shift var(--pulse-normal) linear infinite,
    energy-pulse var(--pulse-normal) var(--ease-consciousness) infinite;
}

.glass-neural {
  --module-color-rgb: var(--neural-rgb);
  --glass-saturation: var(--saturation-high);
  --energy-intensity: var(--glow-neural);
  --particle-opacity: var(--particle-opacity-max);
}

.glass-consciousness {
  --module-color-rgb: var(--consciousness-rgb);
  --glass-blur: var(--blur-heavy);
  --energy-intensity: var(--glow-consciousness);
  --particle-opacity: var(--particle-opacity-max);
  animation: 
    aurora-shift var(--pulse-fast) linear infinite,
    energy-pulse var(--pulse-fast) var(--ease-consciousness) infinite,
    consciousness-fluctuation var(--pulse-normal) var(--ease-consciousness) infinite;
}

.glass-chaos {
  --module-color-rgb: var(--chaos-rgb);
  --glass-saturation: var(--saturation-max);
  --energy-intensity: var(--glow-chaos);
  --particle-opacity: var(--particle-opacity-max);
  --particle-speed: var(--particle-speed-chaos);
  animation: 
    aurora-shift var(--pulse-fast) linear infinite,
    energy-pulse var(--pulse-critical) var(--ease-consciousness) infinite,
    chaos-distortion var(--pulse-fast) var(--ease-consciousness) infinite;
}

.glass-process {
  --module-color-rgb: var(--process-rgb);
  --glass-blur: var(--blur-light);
  --energy-intensity: var(--glow-process);
  --particle-opacity: var(--particle-opacity-min);
}

/* Critical state - pink alert glow */
.glass-critical {
  --module-color-rgb: var(--chaos-rgb);
  --glass-saturation: var(--saturation-max);
  --energy-intensity: var(--glow-chaos);
  animation: 
    error-flicker var(--pulse-critical) var(--ease-sharp) infinite,
    energy-pulse var(--pulse-critical) var(--ease-consciousness) infinite;
}

/* Additional utility classes for backwards compatibility */
.glass {
  /* Simple glass effect - same as glass-panel */
}

.glass-heavy {
  --glass-blur: var(--blur-max);
  --glass-saturation: var(--saturation-max);
}

.glass-light {
  --glass-blur: var(--blur-minimal);
  --glass-saturation: var(--saturation-low);
}

.glass-diagnostic {
  --module-color-rgb: var(--process-rgb);
  --glass-saturation: var(--saturation-normal);
  --energy-intensity: var(--glow-monitoring);
}

.glass-connection {
  --glass-blur: var(--blur-light);
  --module-color-rgb: var(--consciousness-rgb);
  --energy-intensity: 0.3;
}

.glass-connection-glow {
  --glass-blur: var(--blur-medium);
  --module-color-rgb: var(--neural-rgb);
  --energy-intensity: 0.8;
}

/* === STATE MODIFIERS === */

.glass-panel.active,
.glass-base.active,
.glass.active,
.glass-neural.active,
.glass-consciousness.active,
.glass-chaos.active,
.glass-process.active,
.glass-critical.active,
.glass-heavy.active,
.glass-light.active,
.glass-diagnostic.active,
.glass-connection.active,
.glass-connection-glow.active {
  --energy-intensity: var(--glow-multiplier-active);
  --glass-saturation: var(--saturation-max);
  --field-size: var(--field-size-lg);
}

.glass-panel.processing,
.glass-base.processing,
.glass.processing,
.glass-neural.processing,
.glass-consciousness.processing,
.glass-chaos.processing,
.glass-process.processing,
.glass-critical.processing,
.glass-heavy.processing,
.glass-light.processing,
.glass-diagnostic.processing,
.glass-connection.processing,
.glass-connection-glow.processing {
  --energy-intensity: var(--glow-multiplier-processing);
  animation: 
    aurora-shift var(--pulse-critical) linear infinite,
    energy-pulse var(--pulse-critical) var(--ease-consciousness) infinite,
    processing-scan var(--pulse-fast) linear infinite;
}

.glass-panel.error,
.glass-base.error,
.glass.error,
.glass-neural.error,
.glass-consciousness.error,
.glass-chaos.error,
.glass-process.error,
.glass-critical.error,
.glass-heavy.error,
.glass-light.error,
.glass-diagnostic.error,
.glass-connection.error,
.glass-connection-glow.error {
  --module-color-rgb: var(--chaos-rgb);
  animation: 
    error-flicker var(--pulse-critical) var(--ease-sharp) infinite,
    energy-pulse var(--pulse-critical) var(--ease-consciousness) infinite;
}

/* === UTILITY CLASSES === */

/* Breathing animations */
.breathe-idle {
  animation: breathing var(--breathe-idle) var(--ease-smooth) infinite;
}

.breathe-active {
  animation: breathing var(--breathe-active) var(--ease-smooth) infinite;
}

.breathe-processing {
  animation: breathing var(--breathe-processing) var(--ease-smooth) infinite;
}

/* Glow utilities */
.glow-neural {
  filter: drop-shadow(0 0 calc(var(--field-size-md) * var(--glow-neural)) var(--field-neural));
}

.glow-consciousness {
  filter: drop-shadow(0 0 calc(var(--field-size-md) * var(--glow-consciousness)) var(--field-consciousness));
}

.glow-chaos {
  filter: drop-shadow(0 0 calc(var(--field-size-md) * var(--glow-chaos)) var(--field-chaos));
}

.glow-process {
  filter: drop-shadow(0 0 calc(var(--field-size-md) * var(--glow-process)) var(--field-process));
}

/* Particle density utilities */
.particles-sparse {
  --particle-count: var(--particle-count-sparse);
}

.particles-normal {
  --particle-count: var(--particle-count-normal);
}

.particles-dense {
  --particle-count: var(--particle-count-dense);
}

/* === ANIMATIONS === */

@keyframes aurora-shift {
  0% {
    --aurora-angle: 0deg;
  }
  100% {
    --aurora-angle: 360deg;
  }
}

@keyframes particle-drift {
  0% {
    background-position:
      0% 0%,
      100% 100%,
      50% 50%,
      30% 70%,
      70% 30%,
      10% 10%,
      90% 90%;
  }
  100% {
    background-position:
      100% 100%,
      0% 0%,
      50% 0%,
      70% 30%,
      30% 70%,
      90% 90%,
      10% 10%;
  }
}

@keyframes energy-pulse {
  0%, 100% {
    --energy-intensity: 0.5;
  }
  50% {
    --energy-intensity: 1;
  }
}

@keyframes holographic-shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

@keyframes consciousness-fluctuation {
  0%, 100% {
    --refraction-offset: 50%;
  }
  50% {
    --refraction-offset: 60%;
  }
}

@keyframes chaos-distortion {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
  }
}

@keyframes processing-scan {
  0% {
    --energy-level: 0%;
  }
  100% {
    --energy-level: 100%;
  }
}

@keyframes error-flicker {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.8;
  }
}

@keyframes breathing {
  0%, 100% {
    transform: scale(1);
    opacity: var(--particle-opacity-min);
  }
  50% {
    transform: scale(1.02);
    opacity: var(--particle-opacity-max);
  }
}

/* === MEDIA QUERIES === */

@media (prefers-reduced-motion: reduce) {
  .glass-panel,
  .glass-base,
  .glass,
  .glass-neural,
  .glass-consciousness,
  .glass-chaos,
  .glass-process,
  .glass-critical,
  .glass-heavy,
  .glass-light,
  .glass-diagnostic,
  .glass-connection,
  .glass-connection-glow,
  .glass-panel::before,
  .glass-base::before,
  .glass::before,
  .glass-neural::before,
  .glass-consciousness::before,
  .glass-chaos::before,
  .glass-process::before,
  .glass-critical::before,
  .glass-heavy::before,
  .glass-light::before,
  .glass-diagnostic::before,
  .glass-connection::before,
  .glass-connection-glow::before,
  .glass-panel::after,
  .glass-base::after,
  .glass::after,
  .glass-neural::after,
  .glass-consciousness::after,
  .glass-chaos::after,
  .glass-process::after,
  .glass-critical::after,
  .glass-heavy::after,
  .glass-light::after,
  .glass-diagnostic::after,
  .glass-connection::after,
  .glass-connection-glow::after {
    animation: none;
    transition: none;
  }
  
  :root {
    --breathe-idle: 12s;
    --breathe-active: 8s;
    --breathe-processing: 4s;
    --particle-speed-slow: 60s;
    --particle-speed-normal: 50s;
    --particle-speed-fast: 40s;
  }
}

@media (prefers-contrast: high) {
  :root {
    --saturation-normal: 1.2;
    --saturation-high: 1.5;
    --saturation-max: 2.0;
    --glow-multiplier-idle: 0.3;
    --glow-multiplier-active: 0.8;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    --saturation-normal: 2.0;
    --saturation-high: 2.5;
    --glow-multiplier-idle: 0.6;
    --glow-multiplier-active: 1.1;
  }
}

@media (min-width: 1024px) {
  .glass-panel,
  .glass-base,
  .glass,
  .glass-neural,
  .glass-consciousness,
  .glass-chaos,
  .glass-process,
  .glass-critical,
  .glass-heavy,
  .glass-light,
  .glass-diagnostic,
  .glass-connection,
  .glass-connection-glow {
    --glass-blur: var(--blur-heavy);
    --field-size: var(--field-size-lg);
  }
}

/* === DAWN CONSOLIDATED STYLES === */

/* === BACKGROUND.CSS === */
/* DAWN Deep Space Background System */

/* Base space background */
.dawn-space {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: radial-gradient(ellipse at center, #000015 0%, #000000 100%);
  overflow: hidden;
  z-index: 0;
}

/* Three-layer star field with parallax */
.star-field {
  position: absolute;
  width: 100%;
  height: 100%;
}

.star-field::before,
.star-field::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(2px 2px at 20px 30px, #eee, transparent),
    radial-gradient(2px 2px at 40px 70px, rgba(255,255,255,0.8), transparent),
    radial-gradient(1px 1px at 90px 40px, rgba(255,255,255,0.6), transparent),
    radial-gradient(1px 1px at 130px 80px, rgba(255,255,255,0.4), transparent),
    radial-gradient(2px 2px at 160px 30px, rgba(255,255,255,0.9), transparent);
  background-repeat: repeat;
  background-size: 200px 100px;
  animation: drift-stars 120s linear infinite;
}

.star-field::before {
  background-size: 250px 150px;
  animation: drift-stars 180s linear infinite reverse;
  opacity: 0.7;
}

/* Nebula clouds */
.nebula-layer {
  position: absolute;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(ellipse at 20% 50%, rgba(168, 85, 247, 0.1) 0%, transparent 50%),
    radial-gradient(ellipse at 80% 20%, rgba(6, 182, 212, 0.08) 0%, transparent 50%),
    radial-gradient(ellipse at 40% 80%, rgba(236, 72, 153, 0.06) 0%, transparent 50%);
  animation: nebula-drift 200s ease-in-out infinite alternate;
}

/* Depth fog at screen edges */
.depth-fog {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(to right, rgba(0,0,0,0.8) 0%, transparent 15%, transparent 85%, rgba(0,0,0,0.8) 100%),
    linear-gradient(to bottom, rgba(0,0,0,0.6) 0%, transparent 15%, transparent 85%, rgba(0,0,0,0.6) 100%);
  pointer-events: none;
}

/* Consciousness grid */
.consciousness-grid {
  position: absolute;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(168, 85, 247, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(168, 85, 247, 0.03) 1px, transparent 1px);
  background-size: 50px 50px;
  animation: grid-pulse 4s ease-in-out infinite;
}

/* DAWN Logo styles */
.dawn-logo {
  position: fixed;
  top: 60px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 4rem;
  font-weight: 100;
  letter-spacing: 0.5em;
  background: linear-gradient(45deg, #a855f7, #06b6d4, #a855f7);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  text-shadow: 0 0 30px rgba(168, 85, 247, 0.5);
  z-index: 20;
}

/* Audio visualizer */
.audio-visualizer {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  gap: 4px;
  align-items: flex-end;
  height: 60px;
  z-index: 20;
}

.audio-bar {
  width: 8px;
  background: linear-gradient(to top, #a855f7, #06b6d4);
  border-radius: 4px 4px 0 0;
  animation: audio-pulse 0.5s ease-in-out infinite alternate;
  box-shadow: 0 0 10px rgba(168, 85, 247, 0.5);
}

.audio-bar:nth-child(1) { animation-delay: 0s; height: 20%; }
.audio-bar:nth-child(2) { animation-delay: 0.1s; height: 60%; }
.audio-bar:nth-child(3) { animation-delay: 0.2s; height: 40%; }
.audio-bar:nth-child(4) { animation-delay: 0.3s; height: 80%; }
.audio-bar:nth-child(5) { animation-delay: 0.4s; height: 30%; }
.audio-bar:nth-child(6) { animation-delay: 0.5s; height: 70%; }
.audio-bar:nth-child(7) { animation-delay: 0.6s; height: 50%; }
.audio-bar:nth-child(8) { animation-delay: 0.7s; height: 90%; }

/* Animations */
@keyframes drift-stars {
  from {
    transform: translateX(0);
  }
  to {
    transform: translateX(-200px);
  }
}

@keyframes nebula-drift {
  0% {
    transform: translateX(0) rotate(0deg);
    filter: hue-rotate(0deg);
  }
  50% {
    transform: translateX(30px) rotate(0.5deg);
    filter: hue-rotate(30deg);
  }
  100% {
    transform: translateX(0) rotate(0deg);
    filter: hue-rotate(0deg);
  }
}

@keyframes grid-pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

@keyframes audio-pulse {
  0% {
    height: 10%;
    box-shadow: 0 0 5px rgba(168, 85, 247, 0.3);
  }
  100% {
    height: 100%;
    box-shadow: 0 0 20px rgba(168, 85, 247, 0.8);
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .dawn-logo {
    font-size: 2.5rem;
    letter-spacing: 0.3em;
  }
  
  .audio-visualizer {
    height: 40px;
  }
  
  .audio-bar {
    width: 6px;
  }
}

/* When rotations are disabled */
.no-rotations * {
  animation-play-state: paused !important;
}

/* Deep space consciousness styles */
.app-container {
  background: #000000;
  min-height: 100vh;
  position: relative;
}

.glass-neural {
  background: rgba(168, 85, 247, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(168, 85, 247, 0.2);
  box-shadow: 
    0 0 20px rgba(168, 85, 247, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
}

/* === GLASS.CSS === */
/* DAWN Glass Morphism Design System */

/* Base glass effect - multi-layer consciousness containment */
.glass-base {
    /* Multi-layer glass substrate */
    background: 
      /* Refraction layer */
      linear-gradient(
        var(--glass-refraction-angle, 115deg),
        rgba(255, 255, 255, var(--glass-refraction-intensity, 0.01)) 0%,
        rgba(255, 255, 255, var(--glass-refraction-intensity, 0.03)) 20%,
        rgba(120, 119, 198, var(--glass-refraction-intensity, 0.02)) 40%,
        rgba(255, 255, 255, var(--glass-refraction-intensity, 0.01)) 60%,
        rgba(147, 51, 234, var(--glass-refraction-intensity, 0.01)) 80%,
        rgba(255, 255, 255, var(--glass-refraction-intensity, 0.02)) 100%
      ),
      /* Inner glow */
      radial-gradient(
        ellipse at 30% 40%,
        rgba(255, 255, 255, 0.03) 0%,
        transparent 50%
      ),
      /* Outer containment */
      radial-gradient(
        ellipse at center,
        rgba(255, 255, 255, 0.02) 0%,
        rgba(255, 255, 255, 0.01) 50%,
        transparent 100%
      );
    
    /* Advanced filters for depth */
    backdrop-filter: blur(var(--glass-blur, 12px)) saturate(1.5) brightness(1.02);
    -webkit-backdrop-filter: blur(var(--glass-blur, 12px)) saturate(1.5) brightness(1.02);
    
    /* Aurora border effect */
    border: var(--aurora-border-width, 1px) solid transparent;
    border-image: linear-gradient(
      var(--border-angle, 45deg),
      var(--aurora-border-colors)
    ) 1;
    
    /* Multi-layer shadows for depth */
    box-shadow: 
      /* Inner glass refraction */
      inset 0 0 20px rgba(255, 255, 255, 0.02),
      inset 0 0 40px rgba(147, 51, 234, 0.01),
      /* Containment field glow */
      0 0 30px rgba(147, 51, 234, 0.1),
      0 0 60px rgba(59, 130, 246, 0.05),
      /* Depth shadows */
      0 4px 16px rgba(0, 0, 0, 0.3),
      0 8px 32px rgba(0, 0, 0, 0.2);
    
    position: relative;
    overflow: hidden;
    transition: all var(--transition-smooth, 0.6s) var(--ease-consciousness);
    
    /* CSS variables for dynamic states */
    --glass-blur: var(--state-idle-blur, 12px);
    --particle-opacity: var(--state-idle-opacity, 0.4);
    --border-angle: 45deg;
    --refraction-offset: 0px;
    
    /* Aurora border animation */
    animation: aurora-shift var(--aurora-shift-duration, 15s) linear infinite;
  }

/* ... (rest of glass.css content) ... */

/* === TOKENS.CSS === */
/* DAWN Design System Tokens */

:root {
  /* === COSMIC COLOR SPECTRUMS === */
  /* ... (rest of tokens.css content) ... */
} 