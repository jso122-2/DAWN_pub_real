import { useState, useEffect } from 'react'
import { motion } from 'framer-motion'
import { Canvas } from '@react-three/fiber'
import { CosmicBackground } from './components/CosmicBackground'
import EntropyRingHUD from './components/EntropyRing'
import { LayoutManager } from './components/system/LayoutManager'

export default function App() {
  const [isBooting, setIsBooting] = useState(true)
  const [windowWidth, setWindowWidth] = useState(window.innerWidth)

  useEffect(() => {
    // Simulate boot sequence
    const timer = setTimeout(() => setIsBooting(false), 3000)
    return () => clearTimeout(timer)
  }, [])

  useEffect(() => {
    const handleResize = () => setWindowWidth(window.innerWidth)
    window.addEventListener('resize', handleResize)
    return () => window.removeEventListener('resize', handleResize)
  }, [])

  // TEMP: Debug mount
  return (
    <div style={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#111' }}>
      <span style={{ color: '#a78bfa', fontSize: 32, fontWeight: 700, letterSpacing: 2 }}>DAWN Loading...</span>
    </div>
  )
}

// Boot Sequence Component
function BootSequence() {
  const [progress, setProgress] = useState(0)

  useEffect(() => {
    const timer = setInterval(() => {
      setProgress((prev) => Math.min(prev + 1, 100))
    }, 20)
    return () => clearInterval(timer)
  }, [])

  return (
    <div className="h-screen w-screen bg-black flex items-center justify-center">
      <div className="text-center">
        <motion.div
          animate={{
            scale: [1, 1.2, 1],
            rotate: [0, 180, 360],
          }}
          transition={{
            duration: 2,
            repeat: Infinity,
            ease: "linear"
          }}
          className="w-32 h-32 mx-auto mb-8"
        >
          <div className="w-full h-full rounded-full border-4 border-purple-500 border-t-transparent animate-spin" />
        </motion.div>
        
        <h2 className="text-2xl text-purple-400 mb-4">Initializing Neural Core</h2>
        
        <div className="w-64 h-2 bg-gray-800 rounded-full overflow-hidden">
          <motion.div
            className="h-full bg-gradient-to-r from-purple-500 to-pink-500"
            initial={{ width: 0 }}
            animate={{ width: `${progress}%` }}
          />
        </div>
        
        <p className="text-gray-500 mt-4">{progress}%</p>
      </div>
    </div>
  )
}